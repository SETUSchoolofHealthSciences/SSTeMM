{"version":3,"sources":["webpack:///src/app/stress-questions/stress-questions.page.ts","webpack:///src/app/stress-questions/stress-questions.module.ts","webpack:///src/app/component/question/question.component.scss","webpack:///src/app/stress-questions/stress-questions.page.scss","webpack:///src/app/component/question/question.component.html","webpack:///src/app/component/question/question.component.ts","webpack:///src/app/stress-questions/stress-questions-routing.module.ts","webpack:///src/app/stress-questions/stress-questions.page.html"],"names":["TOKEN_KEY","StressQuestionsPage","nav","route","record","alertController","translate","language","questions","submitted","readData","questionId","snapshot","paramMap","get","fetch","currentLang","then","res","json","domains","con","id","title","domain","q","push","StressQuestionsGoBack","create","header","alertHeader","message","alertMessage","buttons","text","alertButtonTwo","handler","console","log","alertButtonOne","navigateRoot","alert","present","form","scoreCard","questionValue","questionOne","length","questionTwo","questionThree","questionFour","questionFive","totalScore","totalScoreCard","totalScores","$event","rowId","value","selector","template","StressQuestionsPageModule","imports","forChild","loader","provide","useFactory","deps","declarations","QuestionComponent","sliderValueChanged","emit","detail","routes","path","component","StressQuestionsPageRoutingModule","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,UAAMA,SAAS,GAAG,cAAlB;;UAMaC,mBAAmB;AAI9B,qCAAoBC,GAApB,EACoBC,KADpB,EAEoBC,MAFpB,EAGoBC,eAHpB,EAIoBC,SAJpB,EAKoBC,QALpB,EAK8C;AAAA;;AAL1B,eAAAL,GAAA,GAAAA,GAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AACA,eAAAC,SAAA,GAAAA,SAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AAPpB,eAAAC,SAAA,GAAY,EAAZ;AACA,eAAAC,SAAA,GAAY,KAAZ;AAOE,eAAKC,QAAL;AACA;;AAX4B;AAAA;AAAA,qCAanB,CACV;AAd6B;AAAA;AAAA,qCAgBnB;AAAA;;AACT,gBAAMC,UAAU,GAAG,KAAKR,KAAL,CAAWS,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,IAAjC,CAAnB;AACAC,iBAAK,CAAC,8BAA8B,KAAKR,QAAL,CAAcS,WAA5C,GAA2D,OAA5D,CAAL,CAA0EC,IAA1E,CAA+E,UAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,aAAlF,EACGF,IADH,CACQ,UAAAE,IAAI,EAAI;AAAA,yDACMA,IAAI,CAACC,OADX;AAAA;;AAAA;AACZ,oEAAgC;AAAA,sBAArBC,GAAqB;;AAC9B,sBAAIV,UAAU,KAAKU,GAAG,CAACC,EAAvB,EAA2B;AACzB,yBAAI,CAACC,KAAL,GAAaF,GAAG,CAACG,MAAjB;;AADyB,gEAETH,GAAG,CAACb,SAFK;AAAA;;AAAA;AAEzB,6EAA+B;AAAA,4BAApBiB,CAAoB;;AAC/B,6BAAI,CAACjB,SAAL,CAAekB,IAAf,CAAoBD,CAApB;AACC;AAJwB;AAAA;AAAA;AAAA;AAAA;AAK1B;AACF;AARW;AAAA;AAAA;AAAA;AAAA;AASb,aAVH;AAWD;AA7B6B;AAAA;AAAA,mCA+BlB;;;;;;;;;AACV,2BAAKnB,SAAL,CAAeqB,qBAAf;;AACc,6BAAM,KAAKtB,eAAL,CAAqBuB,MAArB,CAA4B;AAC9CC,8BAAM,EAAE,KAAKvB,SAAL,CAAewB,WADuB;AAE9CC,+BAAO,EAAE,KAAKzB,SAAL,CAAe0B,YAFsB;AAG9CC,+BAAO,EAAE,CACP;AACEC,8BAAI,EAAE,KAAK5B,SAAL,CAAe6B,cADvB;AAEEC,iCAAO,EAAE,mBAAM;AACbC,mCAAO,CAACC,GAAR,CAAY,KAAZ;AACD;AAJH,yBADO,EAOP;AACEJ,8BAAI,EAAE,KAAK5B,SAAL,CAAeiC,cADvB;AAEEH,iCAAO,EAAE,mBAAM;AACb,kCAAI,CAAClC,GAAL,CAASsC,YAAT,CAAsB,CAAC,wBAAD,CAAtB;AACD;AAJH,yBAPO;AAHqC,uBAA5B,CAAN;;;AAARC,2B;;AAkBN,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;;AACD;AApD6B;AAAA;AAAA,+BAsDnBC,IAtDmB,EAsDP;;;;;;;AACrB,2BAAKvC,MAAL,CAAYwC,SAAZ,CAAsBlB,IAAtB,CAA2B;AAACf,kCAAU,EAAE,CAAb;AAAgBkC,qCAAa,EAAE,KAAKzC,MAAL,CAAY0C,WAAZ,CAAwB,KAAK1C,MAAL,CAAY0C,WAAZ,CAAwBC,MAAxB,GAAiC,CAAzD;AAA/B,uBAA3B;AACA,2BAAK3C,MAAL,CAAYwC,SAAZ,CAAsBlB,IAAtB,CAA2B;AAACf,kCAAU,EAAE,CAAb;AAAgBkC,qCAAa,EAAE,KAAKzC,MAAL,CAAY4C,WAAZ,CAAwB,KAAK5C,MAAL,CAAY4C,WAAZ,CAAwBD,MAAxB,GAAiC,CAAzD;AAA/B,uBAA3B;AACA,2BAAK3C,MAAL,CAAYwC,SAAZ,CAAsBlB,IAAtB,CAA2B;AAACf,kCAAU,EAAE,CAAb;AAAgBkC,qCAAa,EAAE,KAAKzC,MAAL,CAAY6C,aAAZ,CAA0B,KAAK7C,MAAL,CAAY6C,aAAZ,CAA0BF,MAA1B,GAAmC,CAA7D;AAA/B,uBAA3B;AACA,2BAAK3C,MAAL,CAAYwC,SAAZ,CAAsBlB,IAAtB,CAA2B;AAACf,kCAAU,EAAE,CAAb;AAAgBkC,qCAAa,EAAE,KAAKzC,MAAL,CAAY8C,YAAZ,CAAyB,KAAK9C,MAAL,CAAY8C,YAAZ,CAAyBH,MAAzB,GAAkC,CAA3D;AAA/B,uBAA3B;AACA,2BAAK3C,MAAL,CAAYwC,SAAZ,CAAsBlB,IAAtB,CAA2B;AAACf,kCAAU,EAAE,CAAb;AAAgBkC,qCAAa,EAAE,KAAKzC,MAAL,CAAY+C,YAAZ,CAAyB,KAAK/C,MAAL,CAAY+C,YAAZ,CAAyBJ,MAAzB,GAAkC,CAA3D;AAA/B,uBAA3B;AACMK,gC,GAAa,KAAKhD,MAAL,CAAY0C,WAAZ,CAAwB,KAAK1C,MAAL,CAAY0C,WAAZ,CAAwBC,MAAxB,GAAiC,CAAzD,IACnB,KAAK3C,MAAL,CAAY4C,WAAZ,CAAwB,KAAK5C,MAAL,CAAY4C,WAAZ,CAAwBD,MAAxB,GAAiC,CAAzD,CADmB,GAC2C,KAAK3C,MAAL,CAAY6C,aAAZ,CAA0B,KAAK7C,MAAL,CAAY6C,aAAZ,CAA0BF,MAA1B,GAAmC,CAA7D,CAD3C,GAEnB,KAAK3C,MAAL,CAAY8C,YAAZ,CAAyB,KAAK9C,MAAL,CAAY8C,YAAZ,CAAyBH,MAAzB,GAAkC,CAA3D,CAFmB,GAE6C,KAAK3C,MAAL,CAAY+C,YAAZ,CAAyB,KAAK/C,MAAL,CAAY+C,YAAZ,CAAyBJ,MAAzB,GAAkC,CAA3D,C;AAChE,2BAAK3C,MAAL,CAAYiD,cAAZ,GAA6B;AAC3B7B,8BAAM,EAAE,KAAKD,KADc;AAE3BqB,iCAAS,EAAE,KAAKxC,MAAL,CAAYwC,SAFI;AAG3BQ,kCAAU,EAAVA;AAH2B,uBAA7B;;AAKA,6BAAM,KAAKhD,MAAL,CAAYkD,WAAZ,CAAwB5B,IAAxB,CAA6B;AAACF,8BAAM,EAAE,KAAKD,KAAd;AACjCqB,iCAAS,EAAE,KAAKxC,MAAL,CAAYwC,SADU;AAEjCQ,kCAAU,EAAVA;AAFiC,uBAA7B,CAAN;;;AAGA,2BAAKlD,GAAL,CAASsC,YAAT,CAAsB,CAAC,wBAAD,CAAtB;AACA;;;;;;;;;;;AAGD;AA3E6B;AAAA;AAAA,6CA6EXe,MA7EW,EA6EL;AACvB,oBAAQA,MAAM,CAACC,KAAf;AACE,mBAAK,CAAL;AAAQ;AACN,uBAAKpD,MAAL,CAAY0C,WAAZ,CAAwBpB,IAAxB,CAA6B6B,MAAM,CAACE,KAApC;AACA;AACD;;AAED,mBAAK,CAAL;AAAQ;AACN,uBAAKrD,MAAL,CAAY4C,WAAZ,CAAwBtB,IAAxB,CAA6B6B,MAAM,CAACE,KAApC;AACA;AACD;;AAED,mBAAK,CAAL;AAAQ;AACN,uBAAKrD,MAAL,CAAY6C,aAAZ,CAA0BvB,IAA1B,CAA+B6B,MAAM,CAACE,KAAtC;AACA;AACD;;AAED,mBAAK,CAAL;AAAQ;AACN,uBAAKrD,MAAL,CAAY8C,YAAZ,CAAyBxB,IAAzB,CAA8B6B,MAAM,CAACE,KAArC;AACA;AACD;;AAED,mBAAK,CAAL;AAAQ;AACN,uBAAKrD,MAAL,CAAY+C,YAAZ,CAAyBzB,IAAzB,CAA8B6B,MAAM,CAACE,KAArC;AACA;AACD;;AAED;AAAS;AACP;AACD;AA5BH;AA8BD;AA5G6B;;AAAA;AAAA,S;;;;gBAZN;;gBADjB;;gBAIA;;gBAHA;;gBACA;;gBACA;;;;AAUIxD,yBAAmB,6DAL/B,gEAAU;AACTyD,gBAAQ,EAAE,sBADD;AAETC,gBAAQ,EAAR,8EAFS;;AAAA,OAAV,CAK+B,GAAnB1D,mBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCYA2D,yBAAyB;AAAA;AAAA,O;;AAAzBA,+BAAyB,6DAhBrC,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,iGAJO,EAKP,oEAAgBC,QAAhB,CAAyB;AACvBC,gBAAM,EAAE;AACNC,mBAAO,EAAE,mEADH;AAENC,sBAAU,EAAE,8DAFN;AAGNC,gBAAI,EAAE,CAAC,+DAAD;AAHA;AADe,SAAzB,CALO,CADD;AAcRC,oBAAY,EAAE,CAAC,0EAAD,EAAsB,wFAAtB;AAdN,OAAT,CAgBqC,GAAzBP,yBAAyB,CAAzB;;;;;;;;;;;;;;;;AC1Bb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOFQ,iBAAiB;AAK5B,qCAAc;AAAA;;AADJ,eAAAC,kBAAA,GAAqB,IAAI,0DAAJ,EAArB;AACO;;AALW;AAAA;AAAA,qCAOjB;AACT,iBAAKZ,KAAL,GAAa,CAAb;AACD;AAT2B;AAAA;AAAA,4CAWVF,MAXU,EAWJ;AACtB,iBAAKc,kBAAL,CAAwBC,IAAxB,CAA6B;AAAEd,mBAAK,EAAE,KAAKA,KAAd;AAAqBC,mBAAK,EAAEF,MAAM,CAACgB,MAAP,CAAcd;AAA1C,aAA7B;AACD;AAb2B;;AAAA;AAAA,S;;;;;;;;gBAC3B;;;gBACA;;;gBACA;;;gBACA;;;AAJUW,uBAAiB,6DAL7B,gEAAU;AACTV,gBAAQ,EAAE,cADD;AAETC,gBAAQ,EAAR,2EAFS;;AAAA,OAAV,CAK6B,GAAjBS,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFb,UAAMI,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,gCAAgC;AAAA;AAAA,O;;AAAhCA,sCAAgC,6DAJ5C,+DAAS;AACRd,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBU,MAAtB,CAAD,CADD;AAERI,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAI4C,GAAhCD,gCAAgC,CAAhC;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA","file":"stress-questions-stress-questions-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertController, NavController } from '@ionic/angular';\nimport { TranslationService } from '../services/translation.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RecordService } from '../services/record.service';\nimport { NgForm } from '@angular/forms';\n\nconst TOKEN_KEY = 'domain-quest';\n@Component({\n  selector: 'app-stress-questions',\n  templateUrl: './stress-questions.page.html',\n  styleUrls: ['./stress-questions.page.scss'],\n})\nexport class StressQuestionsPage implements OnInit {\n  title: string;\n  questions = [] as any[];\n  submitted = false;\n  constructor(private nav: NavController,\n              private route: ActivatedRoute,\n              private record: RecordService,\n              private alertController: AlertController,\n              private translate: TranslationService,\n              private language: TranslateService ) {\n    this.readData();\n   }\n\n  ngOnInit() {\n  }\n\n  readData() {\n    const questionId = this.route.snapshot.paramMap.get('id');\n    fetch('./assets/locale/question/' + this.language.currentLang  + '.json').then(res => res.json())\n      .then(json => {\n        for (const con of json.domains) {\n          if (questionId === con.id) {\n            this.title = con.domain;\n            for (const q of con.questions) {\n            this.questions.push(q);\n            }\n          }\n        }\n      });\n  }\n\n  async goBack(){\n    this.translate.StressQuestionsGoBack();\n    const alert = await this.alertController.create({\n      header: this.translate.alertHeader,\n      message: this.translate.alertMessage,\n      buttons: [\n        {\n          text: this.translate.alertButtonTwo,\n          handler: () => {\n            console.log('...');\n          }\n        },\n        {\n          text: this.translate.alertButtonOne,\n          handler: () => {\n            this.nav.navigateRoot(['/tabs/stress-signature']);\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async save(form: NgForm){\n    this.record.scoreCard.push({questionId: 1, questionValue: this.record.questionOne[this.record.questionOne.length - 1]});\n    this.record.scoreCard.push({questionId: 2, questionValue: this.record.questionTwo[this.record.questionTwo.length - 1]});\n    this.record.scoreCard.push({questionId: 3, questionValue: this.record.questionThree[this.record.questionThree.length - 1]});\n    this.record.scoreCard.push({questionId: 4, questionValue: this.record.questionFour[this.record.questionFour.length - 1]});\n    this.record.scoreCard.push({questionId: 5, questionValue: this.record.questionFive[this.record.questionFive.length - 1]});\n    const totalScore = this.record.questionOne[this.record.questionOne.length - 1] +\n    this.record.questionTwo[this.record.questionTwo.length - 1] + this.record.questionThree[this.record.questionThree.length - 1] +\n    this.record.questionFour[this.record.questionFour.length - 1] + this.record.questionFive[this.record.questionFive.length - 1];\n    this.record.totalScoreCard = {\n      domain: this.title,\n      scoreCard: this.record.scoreCard,\n      totalScore\n    };\n    await this.record.totalScores.push({domain: this.title,\n      scoreCard: this.record.scoreCard,\n      totalScore});\n    this.nav.navigateRoot(['/tabs/stress-signature']);\n    /* await this.storageService.setLocalData(TOKEN_KEY, this.totalScoreCard).then(() => {\n      this.go.navigate(['tabs/stress-signature']);\n    }); */\n  }\n\n  sliderValueChanged($event): void {\n    switch ($event.rowId) {\n      case 1: {\n        this.record.questionOne.push($event.value);\n        break;\n      }\n\n      case 2: {\n        this.record.questionTwo.push($event.value);\n        break;\n      }\n\n      case 3: {\n        this.record.questionThree.push($event.value);\n        break;\n      }\n\n      case 4: {\n        this.record.questionFour.push($event.value);\n        break;\n      }\n\n      case 5: {\n        this.record.questionFive.push($event.value);\n        break;\n      }\n\n      default: {\n        break;\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { StressQuestionsPageRoutingModule } from './stress-questions-routing.module';\nimport { StressQuestionsPage } from './stress-questions.page';\nimport { QuestionComponent } from '../component/question/question.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { HttpClient } from '@angular/common/http';\nimport { httpLoaderFactory } from '../app.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    StressQuestionsPageRoutingModule,\n    TranslateModule.forChild({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: httpLoaderFactory,\n        deps: [HttpClient]\n      }\n    })\n  ],\n  declarations: [StressQuestionsPage, QuestionComponent]\n})\nexport class StressQuestionsPageModule {}\n","export default \".question-card {\\n  margin: 10px;\\n}\\n\\n.question-content {\\n  margin: 10px;\\n  min-height: 100px;\\n  box-shadow: 0 3px 4px rgba(0, 0, 0, 0.6);\\n  border-radius: 3px;\\n  border: thin solid #ededed;\\n  padding: 1em;\\n  color: #08415C;\\n  text-align: center;\\n}\\n\\n.question-content ion-badge {\\n  padding: 7px !important;\\n  color: white;\\n  font-size: large;\\n}\\n\\n.question-content ion-range {\\n  padding-top: 0px !important;\\n  padding-bottom: 0px !important;\\n}\\n\\n.questions {\\n  padding-top: 0px !important;\\n  padding-bottom: 0px !important;\\n  margin-top: 0% !important;\\n  margin-bottom: 0% !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3F1ZXN0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtBQUNGOztBQUNBO0VBQ0UsWUFBQTtFQUNBLGlCQUFBO0VBQ0Esd0NBQUE7RUFDQSxrQkFBQTtFQUNBLDBCQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtBQUVGOztBQURFO0VBQ0UsdUJBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7QUFHSjs7QUFERTtFQUNFLDJCQUFBO0VBQ0EsOEJBQUE7QUFHSjs7QUFDQTtFQUNFLDJCQUFBO0VBQ0EsOEJBQUE7RUFDQSx5QkFBQTtFQUNBLDRCQUFBO0FBRUYiLCJmaWxlIjoicXVlc3Rpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucXVlc3Rpb24tY2FyZCB7XHJcbiAgbWFyZ2luOiAxMHB4XHJcbn1cclxuLnF1ZXN0aW9uLWNvbnRlbnQge1xyXG4gIG1hcmdpbjogMTBweDtcclxuICBtaW4taGVpZ2h0OiAxMDBweDtcclxuICBib3gtc2hhZG93OiAwIDNweCA0cHggcmdiYSgwLDAsMCwwLjYpO1xyXG4gIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICBib3JkZXI6IHRoaW4gc29saWQgI2VkZWRlZDtcclxuICBwYWRkaW5nOiAxZW07XHJcbiAgY29sb3I6ICMwODQxNUM7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGlvbi1iYWRnZXtcclxuICAgIHBhZGRpbmc6IDdweCAhaW1wb3J0YW50O1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgZm9udC1zaXplOiBsYXJnZTtcclxuICB9XHJcbiAgaW9uLXJhbmdle1xyXG4gICAgcGFkZGluZy10b3A6IDBweCAhaW1wb3J0YW50O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDBweCAhaW1wb3J0YW50O1xyXG4gIH1cclxufVxyXG5cclxuLnF1ZXN0aW9ucyB7XHJcbiAgcGFkZGluZy10b3A6IDBweCAhaW1wb3J0YW50O1xyXG4gIHBhZGRpbmctYm90dG9tOiAwcHggIWltcG9ydGFudDtcclxuICBtYXJnaW4tdG9wOiAwJSAhaW1wb3J0YW50O1xyXG4gIG1hcmdpbi1ib3R0b206IDAlICFpbXBvcnRhbnQ7XHJcbn1cclxuIl19 */\";","export default \".dark-gb {\\n  --ion-background-color: #08415C !important;\\n}\\n\\nion-toolbar {\\n  --background: #08415C;\\n}\\n\\n.logoHeader {\\n  background: #08415C;\\n  position: absolute;\\n  width: 100%;\\n  left: 0;\\n  bottom: 0;\\n  text-align: center;\\n  padding-bottom: 10px;\\n}\\n\\n.header {\\n  color: #08415C;\\n  text-align: center;\\n}\\n\\n.bttn {\\n  font-weight: bold;\\n  font-size: large;\\n  color: white;\\n  text-transform: none;\\n}\\n\\n.icon {\\n  padding-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3N0cmVzcy1xdWVzdGlvbnMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsMENBQUE7QUFDRjs7QUFDQTtFQUNFLHFCQUFBO0FBRUY7O0FBQUE7RUFDSSxtQkFBQTtFQUNBLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLE9BQUE7RUFDQSxTQUFBO0VBQ0Esa0JBQUE7RUFDQSxvQkFBQTtBQUdKOztBQURFO0VBQ0UsY0FBQTtFQUNBLGtCQUFBO0FBSUo7O0FBREU7RUFDRSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLG9CQUFBO0FBSUo7O0FBREE7RUFDRSxrQkFBQTtBQUlGIiwiZmlsZSI6InN0cmVzcy1xdWVzdGlvbnMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRhcmstZ2J7XHJcbiAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogIzA4NDE1QyAhaW1wb3J0YW50O1xyXG59XHJcbmlvbi10b29sYmFye1xyXG4gIC0tYmFja2dyb3VuZDogIzA4NDE1QztcclxufVxyXG4ubG9nb0hlYWRlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMDg0MTVDO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxuICB9XHJcbiAgLmhlYWRlcntcclxuICAgIGNvbG9yOiAgIzA4NDE1QztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBcclxuICB9XHJcbiAgLmJ0dG57XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGZvbnQtc2l6ZTogbGFyZ2U7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcclxufVxyXG5cclxuLmljb24ge1xyXG4gIHBhZGRpbmctcmlnaHQ6IDVweDtcclxufSJdfQ== */\";","export default \"<div class=\\\"question-card\\\">\\n  <div class=\\\"question-content\\\">\\n    <p class=\\\"questions\\\">{{ question }}</p>\\n    <ion-range\\n      id=\\\"slider\\\"\\n      min=\\\"0\\\"\\n      max=\\\"10\\\"\\n      step=\\\"1\\\"\\n      color=\\\"primary\\\"\\n      (ionChange)=\\\"sliderValueChange($event)\\\"\\n      [(ngModel)]=\\\"value\\\"\\n    >\\n      <h3 slot=\\\"start\\\" size=\\\"large\\\">0</h3>\\n      <h3 slot=\\\"end\\\" size=\\\"large\\\">10</h3>\\n    </ion-range>\\n    <ion-badge class=\\\"badge\\\">{{ 'stressRecord.score' | translate }}: {{value}}</ion-badge>\\n  </div>\\n</div>\\n\";","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.scss'],\n})\nexport class QuestionComponent implements OnInit {\n  @Input() question: string;\n  @Input() rowId: number;\n  @Input() value: number;\n  @Output() sliderValueChanged = new EventEmitter<{ rowId: number, value: number }>();\n  constructor() { }\n\n  ngOnInit() {\n    this.value = 0;\n  }\n\n  sliderValueChange($event): void {\n    this.sliderValueChanged.emit({ rowId: this.rowId, value: $event.detail.value });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StressQuestionsPage } from './stress-questions.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StressQuestionsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StressQuestionsPageRoutingModule {}\n","export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"tabs/stress-signature\\\" style=\\\"color: white;\\\"></ion-back-button>\\n    </ion-buttons>\\n    <div class=\\\"logoHeader\\\">\\n      <img src=\\\"assets/sstemm-header.png\\\" width=\\\"150px\\\" />\\n    </div>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <h1 class=\\\"header\\\">{{title}}</h1>\\n  <form #myForm=\\\"ngForm\\\" class=\\\"questions\\\" (ngSubmit)=\\\"save(myForm)\\\" >\\n  <app-question *ngFor=\\\"let question of questions\\\" (sliderValueChanged)=\\\"sliderValueChanged($event)\\\"\\n    [question]=\\\"question.question\\\" [rowId]=\\\"question.id\\\" [value]=\\\"\\\">\\n  </app-question>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size-sm=\\\"6\\\" size=\\\"6\\\" class=\\\"ion-text-center\\\">\\n        <ion-button expand=\\\"block\\\" class=\\\"ion-text-wrap min-max-width bttn\\\" (click)=\\\"goBack()\\\">\\n          <ion-icon class=\\\"icon\\\" name=\\\"arrow-back-outline\\\"></ion-icon>{{ 'button.back' | translate }}</ion-button>\\n      </ion-col>\\n\\n      <ion-col size-sm=\\\"6\\\" size=\\\"6\\\" class=\\\"ion-text-center\\\">\\n        <ion-button expand=\\\"block\\\" class=\\\"ion-text-wrap min-max-width bttn\\\" type=\\\"submit\\\">\\n          <ion-icon  class=\\\"icon\\\" name=\\\"save\\\"></ion-icon>{{ 'button.save' | translate }}</ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</form>\\n</ion-content>\";"]}